#__Term Project__: Goblin
#Idea: Player can chose which cat to play as
#goal is to beat the evil boss (dog ai character) that gets more difficult 
#once level is passed, player earns prize which can be used to
#boss is AI

#Characters: 
# cat class
# attributes: hp, healing, damage, duration of special skill

# dog class
# attributes: hp, damage, healing, skill (best choice made by ai)
# ai--> level 1; easy ai, random number genrator for moves
#       level 2; medium ai, if statement 
#       level 3; minimax ai

#Model:
#--


#View:
#--modes for different parts of game (start screen, game screen, store)
#--

#Controller:
#--keyPressed for moving character (a,w,s,d)
#--timerFired for duration of special skill, timed quest


#add music: fight musics, victory toon, loser toon


###################################################################

from cmu_112_graphics import *
from characterClass import *





###################################################################


def appStarted(app):
    app.width = 1000
    app.height = 720

    app.gameOver = False

    



    #__Player Sprites and Images__

    #--idle right
    img1 = app.loadImage("heroIdle.png")
    app.idlePlyrImageR = app.scaleImage(img1, 3)
    #--idle left
    app.idlePlyrImageL = app.idlePlyrImageR.transpose(Image.FLIP_LEFT_RIGHT)

    #--run right
    img2 = app.loadImage("heroRun.png")
    app.runPlyrImageR = app.scaleImage(img2, 3)
    #--run left
    app.runPlyrImageL = app.runPlyrImageR.transpose(Image.FLIP_LEFT_RIGHT)

    #--jump right
    img3 = app.loadImage("heroJumpUp.png")
    app.jumpPlyrImageR = app.scaleImage(img3, 3)
    #--jump left
    app.jumpPlyrImageL = app.jumpPlyrImageR.transpose(Image.FLIP_LEFT_RIGHT)

    #--attack right
    img4 = app.loadImage("heroAttack.png")
    app.attackPlyrImageR = app.scaleImage(img4, 3)
    #--attack left
    app.attackPlyrImageL = app.attackPlyrImageR.transpose(Image.FLIP_LEFT_RIGHT)

    #--dead right
    img5 = app.loadImage("heroDeath.png")
    app.deathPlyrImageR = app.scaleImage(img5, 3)
    #--dead left
    app.deathPlyrImageL = app.deathPlyrImageR.transpose(Image.FLIP_LEFT_RIGHT)
    

    #list of player images
    app.plyrImages = [(app.idlePlyrImageL, app.idlePlyrImageR), (app.runPlyrImageL, app.runPlyrImageR),
                      (app.jumpPlyrImageL, app.jumpPlyrImageR), (app.attackPlyrImageL, app.attackPlyrImageR),
                      (app.deathPlyrImageL, app.deathPlyrImageR)]


    app.Player = Player(app, 200, 500)
